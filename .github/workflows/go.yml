name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - ${{ secrets.POSTGRES_PORT }}:${{ secrets.POSTGRES_PORT }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Create env file
      run: |
        echo "${{ secrets.ENV_FILE }}" > app.env

    - name: Install migrate
      run: |
        DOWNLOAD_URL=$(curl -fsSL https://api.github.com/repos/golang-migrate/migrate/releases/latest | grep "tag_name" | awk '{print "https://github.com/golang-migrate/migrate/releases/download/" substr($2, 2, length($2)-3) "/migrate.linux-amd64.tar.gz"}')
        curl -fsSL ${DOWNLOAD_URL} | tar xz migrate
        sudo mv migrate /usr/bin/migrate

    - name: Run migration
      run: make migrateup

    - name: Test package
      run: make test
